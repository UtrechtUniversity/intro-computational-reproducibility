# Project Management

This section covers the following topics:

* Setting up a folder structure

* Using git for version control

* Publishing your project on github

* Choosing a license

Time for some hands-on practice!

We have 3 short videos and accompanying exercises for you to go through one by one.
Watch the video first, then apply the exercises to your own project.
Use the [slides](../slides/slides_project-setup.html) linked above to follow links discussed in the video.
Be sure to ask for help when you need it!

## Project setup

### Video

```{r echo=FALSE}
vembedr::embed_url("https://vimeo.com/462773031")
```

### Slides

```{r embed-xaringan-1, echo=FALSE}
xaringanExtra::embed_xaringan(url = "../slides/slides_introduction.html", ratio = "4:3")
```

[Slides](../slides/slides_project-setup.html#3)

### Exercises

_NB: You can check the slides for more detail._

* The video and [slides](../slides/slides_project-setup.html#4) ask you to use a tool called cookiecutter to install a project structure in your system. However, we're going to skip that and go straight to the 'backup' instructions! It will be more efficient for us during the online version of the course.

* Use the instructions [on this slide](../slides/slides_project-setup.html#6) to clone a template repository of a project folder structure to your computer. Remember to also follow the instructions on removing the .git folder that is downloaded.

* R users can also use the following code:

```{r eval=FALSE, echo=TRUE}

# install.packages("usethis")

usethis::use_zip("https://github.com/bvreede/good-enough-project-template/archive/refs/heads/master.zip",
                 destdir = getwd())
```


* Place your project files in the right folder.

* Adjust paths in your code, and be sure to use relative paths!

* Does your code run in the new folder structure?

## Version control

### Video

```{r echo=FALSE}
vembedr::embed_url("https://vimeo.com/463264170")
```

### Slides

```{r echo=FALSE}
xaringanExtra::embed_xaringan(url = "../slides/slides_project-setup.html#15", ratio = "4:3")
```
[Slides](../slides/slides_project-setup.html#15)

### Exercise

* Follow the steps in the video (or [on these slides](../slides/slides_project-setup.html#17)) to turn your folder into a git repository.

* Make a remote version of your project on GitHub!

* Please note: are there (temporary) files you do not wish to track?
  Add them to the `.gitignore` file.
  Consider a `.gitignore` template for your language: examples on [this github repo](https://github.com/github/gitignore).

* Can you use Git and push to Github from your IDE?

* Experiment with editing and committing on GitHub itself. You can then 'download' your code to your local repository using `git pull`.

* Optional: What happens if you edit the same file online and locally, and try to push/pull?
  (Hint: this often causes a 'merge conflict', which is no fun to experience.
  Going through it today means we can assist you if necessary!)

## Publication & licensing

### Video

```{r echo=FALSE}
vembedr::embed_url("https://vimeo.com/463659936")
```

### Slides

```{r echo=FALSE}
xaringanExtra::embed_xaringan(url = "../slides/slides_project-setup.html#9", ratio = "4:3")
```
[Slides](../slides/slides_project-setup.html#9)

### Exercise

* Check the license in your project

* Take a look at other license options via [choosealicense.com](https://choosealicense.com/).

* Do you want to change your license? Go into your Github and change the LICENSE.md file. Don't forget to pull your remote changes!
